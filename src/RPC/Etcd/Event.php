<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Proto/kv.proto

namespace Etcd;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>storagepb.Event</code>
 */
class Event extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.storagepb.Event.EventType type = 1;</code>
     */
    protected $type = 0;
    /**
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     *
     * Generated from protobuf field <code>.storagepb.KeyValue kv = 2;</code>
     */
    protected $kv = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $type
     *     @type \Etcd\KeyValue $kv
     *           A PUT event contains current kv pair.
     *           A PUT event with kv.Version=1 indicates the creation of a key.
     *           A DELETE/EXPIRE event contains the deleted key with
     *           its modification revision set to the revision of deletion.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Kv::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.storagepb.Event.EventType type = 1;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.storagepb.Event.EventType type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Etcd\Event\EventType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     *
     * Generated from protobuf field <code>.storagepb.KeyValue kv = 2;</code>
     * @return \Etcd\KeyValue|null
     */
    public function getKv()
    {
        return $this->kv;
    }

    public function hasKv()
    {
        return isset($this->kv);
    }

    public function clearKv()
    {
        unset($this->kv);
    }

    /**
     * A PUT event contains current kv pair.
     * A PUT event with kv.Version=1 indicates the creation of a key.
     * A DELETE/EXPIRE event contains the deleted key with
     * its modification revision set to the revision of deletion.
     *
     * Generated from protobuf field <code>.storagepb.KeyValue kv = 2;</code>
     * @param \Etcd\KeyValue $var
     * @return $this
     */
    public function setKv($var)
    {
        GPBUtil::checkMessage($var, \Etcd\KeyValue::class);
        $this->kv = $var;

        return $this;
    }

}

